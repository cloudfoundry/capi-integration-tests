{
  "comment": [
    "I have no impact to the broker (json doesn't support comments explicitly)",
    "",
    "Run 'curl <service-broker-url>/config' to fetch the current configuration of the service broker",
    "Run 'curl <service-broker-url>/config -d @<json-file>' to update the current configuration of the service broker",
    "",
    "With the exception of catalog, behaviors are defined with responses by service plan guid. 'default' is the fallback response that the broker will use if a plan is not provided.",
    "",
    "Instead of specifying the 'body' key for responses, you can provide 'raw_body' which is a string of the response to return.",
    "raw_body allows you to specify invalid json responses. The 'body' key must be missing for the service broker to use raw_body."
  ],
  "behaviors": {
    "catalog": {
      "sleep_seconds": 0,
      "status": 200,
      "body": {
        "services": [
          {
            "name": "fake-service",
            "id": "4af73291-9792-44fc-96df-934847f2c344",
            "description": "fake service",
            "tags": [
              "no-sql",
              "relational"
            ],
            "requires": [
              "route_forwarding"
            ],
            "max_db_per_node": 5,
            "bindable": true,
            "metadata": {
              "provider": {
                "name": "The name"
              },
              "listing": {
                "imageUrl": "http://catgifpage.com/cat.gif",
                "blurb": "fake broker that is fake",
                "longDescription": "A long time ago, in a galaxy far far away..."
              },
              "displayName": "The Fake Broker"
            },
            "dashboard_client": {
              "id": "1dbbedb5-ec0d-4648-b4b2-70167e6ef81e",
              "secret": "8cf31a52-cd04-49df-88d2-96cc20281d4d",
              "redirect_uri": "http://localhost:5551"
            },
            "plan_updateable": true,
            "plans": [
              {
                "name": "fake-plan",
                "id": "4641bbea-137d-4ba3-a24b-65d13125f11a",
                "description": "Shared fake Server, 5tb persistent disk, 40 max concurrent connections",
                "max_storage_tb": 5,
                "metadata": {
                  "cost": 0,
                  "bullets": [
                    {
                      "content": "Shared fake server"
                    },
                    {
                      "content": "5 TB storage"
                    },
                    {
                      "content": "40 concurrent connections"
                    }
                  ]
                }
              },
              {
                "name": "fake-async-plan",
                "id": "1d7dd39a-62ca-4569-b068-d03e6ebe5dff",
                "description": "Shared fake Server, 5tb persistent disk, 40 max concurrent connections. 100 async",
                "max_storage_tb": 5,
                "metadata": {
                  "cost": 0,
                  "bullets": [
                    {
                      "content": "40 concurrent connections"
                    }
                  ]
                }
              },
              {
                "name": "fake-async-only-plan",
                "id": "e9b2c48f-b254-4e34-ad03-fc1014a246f3",
                "description": "Shared fake Server, 5tb persistent disk, 40 max concurrent connections. 100 async",
                "max_storage_tb": 5,
                "metadata": {
                  "cost": 0,
                  "bullets": [
                    {
                      "content": "40 concurrent connections"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    "provision": {
      "default": {
        "sleep_seconds": 0,
        "status": 200,
        "body": {
        }
      },
      "1d7dd39a-62ca-4569-b068-d03e6ebe5dff": {
        "sleep_seconds": 0,
        "status": 202,
        "body": {
        }
      },
      "e9b2c48f-b254-4e34-ad03-fc1014a246f3": {
        "async_only": true,
        "sleep_seconds": 0,
        "status": 202,
        "body": {
        }
      }
    },
    "fetch": {
      "default": {
        "in_progress": {
          "sleep_seconds": 0,
          "status": 200,
          "body": {
            "state": "in progress"
          }
        },
        "finished": {
          "sleep_seconds": 0,
          "status": 200,
          "body": {
            "state": "succeeded"
          }
        }
      }
    },
    "update": {
      "default": {
        "sleep_seconds": 0,
        "status": 200,
        "body": {
        }
      },
      "1d7dd39a-62ca-4569-b068-d03e6ebe5dff": {
        "sleep_seconds": 0,
        "status": 202,
        "body": {
        }
      },
      "e9b2c48f-b254-4e34-ad03-fc1014a246f3": {
        "async_only": true,
        "sleep_seconds": 0,
        "status": 202,
        "body": {
        }
      }
    },
    "deprovision": {
      "default": {
        "sleep_seconds": 0,
        "status": 200,
        "body": {
        }
      },
      "1d7dd39a-62ca-4569-b068-d03e6ebe5dff": {
        "sleep_seconds": 0,
        "status": 202,
        "body": {
        }
      },
      "e9b2c48f-b254-4e34-ad03-fc1014a246f3": {
        "async_only": true,
        "sleep_seconds": 0,
        "status": 202,
        "body": {
        }
      }
    },
    "bind": {
      "default": {
        "sleep_seconds": 0,
        "status": 201,
        "body": {
          "route_service_url": "https://logging-route-service.bosh-lite.com",
          "credentials": {
            "uri": "fake-service://fake-user:fake-password@fake-host:3306/fake-dbname",
            "username": "fake-user",
            "password": "fake-password",
            "host": "fake-host",
            "port": 3306,
            "database": "fake-dbname"
          }
        }
      }
    },
    "unbind": {
      "default": {
        "sleep_seconds": 0,
        "status": 200,
        "body": {
        }
      }
    }
  },
  "service_instances": {
  },
  "service_bindings": {
  },
  "max_fetch_service_instance_requests": 1
}